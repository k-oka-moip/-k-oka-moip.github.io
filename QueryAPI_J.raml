#%RAML 1.0

# AMWA NMOS Discovery and Registration Specification: Query API
# (c) AMWA 2016

title: Query
baseUri: http://example.api.com/x-nmos/query/{version}
version: v1.3
mediaType: application/json
types:
  Node: !include schemas/node.json
  Nodes: !include schemas/nodes.json
  Device: !include schemas/device.json
  Devices: !include schemas/devices.json
  Source: !include schemas/source.json
  Sources: !include schemas/sources.json
  Flow: !include schemas/flow.json
  Flows: !include schemas/flows.json
  Sender: !include schemas/sender.json
  Senders: !include schemas/senders.json
  Receiver: !include schemas/receiver.json
  Receivers: !include schemas/receivers.json
  ErrorSchema: !include schemas/error.json
traits:
  paged:
    description: 結果のページ分割をサポートする API リソース
    queryParameters:
      paging.since:
        description: 指定された時間以降に作成/更新された結果のみを返します（包括的ではありません）（秒：ナノ秒）
        type: string
        pattern: "^[0-9]+:[0-9]+$"
      paging.until:
        description: 指定された時間（秒を含む）までに作成/更新された結果のみを返します（秒：ナノ秒）
        type: string
        pattern: "^[0-9]+:[0-9]+$"
      paging.limit:
        description: 指定された数の結果に応答を制限します。実装は、制限に対して独自のデフォルトと最大値を指定できます
        type: integer
      paging.order:
        description: ページングを最初のリソース作成時間に基づくか、最後に変更した日時に基づくかを指定します。どちらの場合も、応答は降順で提供する必要があります
        type: string
        enum: ["create", "update"]
        default: "update"
    responses:
      200:
        headers:
          Link:
            description: ページング用のカーソルへの参照を提供します。「rel」属性は、「next」、「prev」、「first」、または「last」のいずれかになります。
            type: string
            example: <http://example.api.com/x-nmos/query/{version}/nodes/?paging.since=1441716120:318744030&paging.limit=20>; rel="next", <http://example.api.com/x-nmos/query/{version}/nodes/?paging.until=1441716353:6839634&paging.limit=20>; rel="prev"
          X-Paging-Limit:
            description: ページングに使用されている現在の制限を識別します。要求された値が実装に対して高すぎる場合、要求された値と一致しない可能性があります
            type: integer
          X-Paging-Since:
            description: 使用中のクエリパラメータ 'paging.since' の現在の値を識別します。指定されていない場合は、このデータセットを返すために必要な値を識別します。この値は、結果の前のページを返すためのクエリの paging.until 値として再利用することができます。これを X-Paging-Until ヘッダ値と組み合わせることで、現在返されているデータセットの絶対的な時間境界が得られます。
            type: string
            example: 1441716353:6839634
          X-Paging-Until:
            description: 使用中のクエリパラメータ 'paging.until' の現在の値を識別します。指定されていない場合は、このデータセットを返すために必要な値を識別します。この値は、結果の次のページを返すためのクエリの paging.since 値として再利用することができます。これをX-Paging-Sinceヘッダ値と組み合わせることで、現在返されているデータセットの絶対的な時間境界が得られます。
            type: string
            example: 1441716120:318744030
      501:
        description: 指定されたクエリパラメータは、現在この実装ではサポートされていません。
  downgrade:
    description: APIリソースは、リクエストがデフォルトで返すよりも古いマイナーAPIのバージョンにマッチするデータの返却をサポートする。
    queryParameters:
      query.downgrade:
        description: レジストリ内にリソースが存在する場合には、最小のAPIバージョンのリソースを返す
        type: string
        pattern: "^v[0-9]+.[0-9]+$"
    responses:
      400:
        description: ダウングレードクエリ応答は、メジャーAPIバージョン間との置き換えは許可されていません。
      501:
        description: 指定されたクエリパラメータは、現在のところこの実装ではサポートされていません。
  rql:
    description: This resource MAY support advanced query formats using the Resource Query Language (RQL) syntax
    queryParameters:
      query.rql:
        description: RQL format string indicating the query to be performed, such as 'and(eq(format,urn:x-nmos:format:video),in(tags.location,(Salford,London)))'. Strings used as filter values MUST be URL encoded.
        type: string
    responses:
      400:
        description: The server refuses to perform the query as it would be too resource intensive.
      501:
        description: The query parameters specified are not currently supported by this implementation.
  ancestry:
    description: This resource MAY support ancestry tracking whereby an ID is traced through 'parents' attributes to find and return all related resources
    queryParameters:
      query.ancestry_id:
        description: UUID of the Source or Flow for which the ancestry is to be tracked
        type: string
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
      query.ancestry_type:
        description: The type of ancestry query to perform, whether searching for 'parents' or 'children' of the specified resource
        type: string
        enum: ["parents", "children"]
      query.ancestry_generations:
        description: The maximum number of generations to search through before returning the set of results. If this is not set, the server may use a default or fail to return results due to the request being too resource intensive
        type: integer
    responses:
      200:
        headers:
          X-Ancestry-Generations:
            description: Identifies the number of ancestry generations being searched through. If 'query.ancestry_generations' is not specified by the user this should be returned as the server defined default.
            type: integer
      400:
        description: The server refuses to perform the query as it would be too resource intensive.
      501:
        description: The query parameters specified are not currently supported by this implementation.
documentation:
  - title: 概要
    content: |
    Query APIは、NMOSディスカバリーノードによって公開されます。
    これは、ネットワーク上のすべてのノードに(分散された)レジストリの内容を公開するために使用されます。
    そのようなレジストリが利用できない小規模なデプロイメントでは、独自の制御機能を持つノードは、Peer to Peer仕様を使用して直接ノードを問い合わせることにフォールバックします。
    これは読み取り専用APIです。

    （必須）スキーマで'Optional'として定義されている属性は、レジストリ内に存在する場合、Query APIによって返されなければなりません[MUST]。
    プレゼンス（存在）宣言は、Registration API側で登録する必要があるか、Node APIを介して提示する必要があるかに関係しています。
  - title: その他のドキュメント
    content: |
    このAPIの動作をカバーするその他の規範的なドキュメントは、このリポジトリのdocsフォルダに含まれています。 （https://amwa-tv.github.io/nmos-discovery-registration/tags/v1.3/docs/
/:
  displayName: Base
  get:
    description: このAPIから利用可能なパスのリスト
    responses:
      200:
        body:
          example: !include ../examples/queryapi-base-get-200.json
          type: !include schemas/queryapi-base.json
/nodes:
  displayName: Nodes
  get:
    is: [paged, rql, downgrade]
    description: |
    ノードを一覧表示します。
      NB: クエリパラメータは、許可されているすべてのリソース属性に実装する必要があります。
    queryParameters:
      id:
      version:
      label:
      description:
      tags:
    responses:
      200:
        body:
          example: !include ../examples/queryapi-nodes-get-200.json
          type: Nodes
      501:
        description: 指定されたクエリパラメータは、現在この実装ではサポートされていません。
        body:
          type: ErrorSchema
  /{nodeId}:
    uriParameters:
      nodeId:
        type: string
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
    get:
      is: [downgrade]
      description: Get a single Node
      responses:
        200:
          body:
            example: !include ../examples/queryapi-nodeid-get-200.json
            type: Node
        404:
          description: Returned when the requested Node ID does not exist
          body:
            type: ErrorSchema
        409:
          description: Returned when the requested Node ID exists in the registry at a lower API version and a query downgrade has not been requested, or the requested downgrade does not extend as far as the resource's API version. The correct API version is identified via the Location header.
          body:
            type: ErrorSchema
          headers:
            Location:
              example: /x-nmos/query/{version}/nodes/3b8be755-08ff-452b-b217-c9151eb21193
/sources:
  displayName: Sources
  get:
    is: [paged, rql, ancestry, downgrade]
    description: |
      List Sources.
      NB: Query parameters should be implemented for all permitted resource attributes.
    queryParameters:
      id:
      version:
      label:
      description:
      tags:
    responses:
      200:
        body:
          example: !include ../examples/queryapi-sources-get-200.json
          type: Sources
      501:
        description: The query parameters specified are not currently supported by this implementation.
        body:
          type: ErrorSchema
  /{sourceId}:
    uriParameters:
      sourceId:
        type: string
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
    get:
      is: [downgrade]
      description: Get a single Source
      responses:
        200:
          body:
            example: !include ../examples/queryapi-sourceid-get-200.json
            type: Source
        404:
          description: Returned when the requested Source ID does not exist
          body:
            type: ErrorSchema
        409:
          description: Returned when the requested Source ID exists in the registry at a lower API version and a query downgrade has not been requested, or the requested downgrade does not extend as far as the resource's API version. The correct API version is identified via the Location header.
          body:
            type: ErrorSchema
          headers:
            Location:
              example: /x-nmos/query/{version}/sources/c23c6a65-8e91-4f6c-a484-046363dbca29
/flows:
  displayName: Flows
  get:
    is: [paged, rql, ancestry, downgrade]
    description: |
      List Flows.
      NB: Query parameters should be implemented for all permitted resource attributes.
    queryParameters:
      id:
      version:
      label:
      description:
      tags:
    responses:
      200:
        body:
          example: !include ../examples/queryapi-flows-get-200.json
          type: Flows
      501:
        description: The query parameters specified are not currently supported by this implementation.
        body:
          type: ErrorSchema
  /{flowId}:
    uriParameters:
      flowId:
        type: string
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
    get:
      is: [downgrade]
      description: Get a single Flow
      responses:
        200:
          body:
            example: !include ../examples/queryapi-flowid-get-200.json
            type: Flow
        404:
          description: Returned when the requested Flow ID does not exist
          body:
            type: ErrorSchema
        409:
          description: Returned when the requested Flow ID exists in the registry at a lower API version and a query downgrade has not been requested, or the requested downgrade does not extend as far as the resource's API version. The correct API version is identified via the Location header.
          body:
            type: ErrorSchema
          headers:
            Location:
              example: /x-nmos/query/{version}/flows/b3bb5be7-9fe9-4324-a5bb-4c70e1084449
/devices:
  displayName: Devices
  get:
    is: [paged, rql, downgrade]
    description: |
      List Devices.
      NB: Query parameters should be implemented for all permitted resource attributes.
    queryParameters:
      id:
      version:
      label:
      description:
      tags:
    responses:
      200:
        body:
          example: !include ../examples/queryapi-devices-get-200.json
          type: Devices
      501:
        description: The query parameters specified are not currently supported by this implementation.
        body:
          type: ErrorSchema
  /{deviceId}:
    uriParameters:
      deviceId:
        type: string
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
    get:
      is: [downgrade]
      description: Get a single Device
      responses:
        200:
          body:
            example: !include ../examples/queryapi-deviceid-get-200.json
            type: Device
        404:
          description: Returned when the requested Device ID does not exist
          body:
            type: ErrorSchema
        409:
          description: Returned when the requested Device ID exists in the registry at a lower API version and a query downgrade has not been requested, or the requested downgrade does not extend as far as the resource's API version. The correct API version is identified via the Location header.
          body:
            type: ErrorSchema
          headers:
            Location:
              example: /x-nmos/query/{version}/devices/a370d258-69de-4422-860a-ee4cf32ee9f4
/senders:
  displayName: Senders
  get:
    is: [paged, rql, downgrade]
    description: |
      List Senders.
      NB: Query parameters should be implemented for all permitted resource attributes.
    queryParameters:
      id:
      version:
      label:
      description:
      tags:
    responses:
      200:
        body:
          example: !include ../examples/queryapi-senders-get-200.json
          type: Senders
      501:
        description: The query parameters specified are not currently supported by this implementation.
        body:
          type: ErrorSchema
  /{senderId}:
    uriParameters:
      senderId:
        type: string
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
    get:
      is: [downgrade]
      description: Get a single Sender
      responses:
        200:
          body:
            example: !include ../examples/queryapi-senderid-get-200.json
            type: Sender
        404:
          description: Returned when the requested Sender ID does not exist
          body:
            type: ErrorSchema
        409:
          description: Returned when the requested Sender ID exists in the registry at a lower API version and a query downgrade has not been requested, or the requested downgrade does not extend as far as the resource's API version. The correct API version is identified via the Location header.
          body:
            type: ErrorSchema
          headers:
            Location:
              example: /x-nmos/query/{version}/senders/171d5c80-7fff-4c23-9383-46503eb1c63e
/receivers:
  displayName: Receivers
  get:
    is: [paged, rql, downgrade]
    description: |
      List Receivers.
      NB: Query parameters should be implemented for all permitted resource attributes.
    queryParameters:
      id:
      version:
      label:
      description:
      tags:
    responses:
      200:
        body:
          example: !include ../examples/queryapi-receivers-get-200.json
          type: Receivers
      501:
        description: The query parameters specified are not currently supported by this implementation.
        body:
          type: ErrorSchema
  /{receiverId}:
    uriParameters:
      receiverId:
        type: string
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
    get:
      is: [downgrade]
      description: Get a single Receiver
      responses:
        200:
          body:
            example: !include ../examples/queryapi-receiverid-get-200.json
            type: Receiver
        404:
          description: Returned when the requested Receiver ID does not exist
          body:
            type: ErrorSchema
        409:
          description: Returned when the requested Receiver ID exists in the registry at a lower API version and a query downgrade has not been requested, or the requested downgrade does not extend as far as the resource's API version. The correct API version is identified via the Location header.
          body:
            type: ErrorSchema
          headers:
            Location:
              example: /x-nmos/query/{version}/receivers/3350d113-1593-4271-a7f5-f4974415bb8e
/subscriptions:
  displayName: Subscriptions
  options:
    description: A pre-flight check generally used for Cross-Origin Resource Sharing (CORS) purposes
    responses:
      200:
      403:
  post:
    description: Create a websocket subscription to an API resource
    body:
      example: !include ../examples/queryapi-subscriptions-post-request.json
      type: !include schemas/queryapi-subscriptions-post-request.json
    responses:
      201:
        body:
          example: !include ../examples/queryapi-subscriptions-post-200.json
          type: !include schemas/queryapi-subscription-response.json
        headers:
          Location:
            example: /x-nmos/query/{version}/subscriptions/7c903667-7113-4a8f-8865-1c63f9070a9e
      200:
        body:
          example: !include ../examples/queryapi-subscriptions-post-200.json
          type: !include schemas/queryapi-subscription-response.json
        headers:
          Location:
            example: /x-nmos/query/{version}/subscriptions/7c903667-7113-4a8f-8865-1c63f9070a9e
      400:
        description: Returned when the POST request is incorrectly formatted, missing mandatory attributes or an attribute is invalid given the API's configuration
        body:
          type: ErrorSchema
      501:
        description: The query parameters specified are not currently supported by this implementation.
        body:
          type: ErrorSchema
  get:
    is: [paged]
    description: List active connections to websockets providing real-time updates on resource changes (for debug use only)
    responses:
      200:
        body:
          example: !include ../examples/queryapi-subscriptions-get-200.json
          type: !include schemas/queryapi-subscriptions-response.json
  /{subscriptionId}:
    uriParameters:
      subscriptionId:
        type: string
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
    get:
      description: Get a single subscription (for debug use only)
      responses:
        200:
          body:
            example: !include ../examples/queryapi-subscriptionid-get-200.json
            type: !include schemas/queryapi-subscription-response.json
        404:
          description: Returned when the requested Subscription ID does not exist
          body:
            type: ErrorSchema
        409:
          description: Returned when the requested Subscription ID exists in the registry at a different API version. The correct API version is identified via the Location header.
          body:
            type: ErrorSchema
          headers:
            Location:
              example: /x-nmos/query/{version}/subscriptions/7c903667-7113-4a8f-8865-1c63f9070a9e
    options:
      description: A pre-flight check generally used for Cross-Origin Resource Sharing (CORS) purposes
      responses:
        200:
        403:
    delete:
      description: Delete a single subscription
      responses:
        204:
          description: The expected response, indicating 'No Content' following the DELETE
        403:
          description: Returned when a DELETE request is made against a non-persistent subscription which is managed by the Query API and cannot be deleted
          body:
            type: ErrorSchema
        404:
          description: Returned when the requested Subscription ID does not exist
          body:
            type: ErrorSchema
        409:
          description: Returned when the requested Subscription ID exists in the registry at a different API version. The correct API version is identified via the Location header.
          body:
            type: ErrorSchema
          headers:
            Location:
              example: /x-nmos/query/{version}/subscriptions/7c903667-7113-4a8f-8865-1c63f9070a9e
